# This is a basic workflow to help you get started with Actions

name: deploy-py-lambda

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "local" branch
  push:
    branches: [ "test" ]
  # pull_request:
  #   branches: [ "local" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Deploy code to Lambda
        uses: kravlad/aligator@test
        with:
          # lambda_layer_arn: 'arn:aws:lambda:eu-central-1:222222222222:layer:layer-name'
          lambda_function_name: aligator-test
          lambda_region: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      
      
      
      
      
      #  run: echo Hello, world!

      # Runs a set of commands using the runners shell
     # - name: Run a multi-line script
     #   run: |
     #     echo Add other actions to build,
     #     echo test, and deploy your project.




