if __name__ == "__main__":
    from impdirs import insimpdirs
    insimpdirs()

from datetime import datetime, timedelta
from bs4 import BeautifulSoup
import requests
import time

import config.config as cfg
import tools.mongodb as db
import defs.common as common


async def getrbcecnfin():
    headlist = ['RBCeconomy', 'RBCfin']
    # headlist = []
    # data = {}
    # i = 3
    data = await getrbceconomy(headlist)
    # for item in tmpheadlist:
    #     headlist.append(item)
    #     i += 1
    #     time.sleep(3)
    return(headlist, data)

async def getrbceconomy(headlist):
    # –ø–æ–ª—É—á–∞–µ–º id –ø–æ—Å–ª–µ–¥–Ω–µ–π –Ω–æ–≤–æ—Å—Ç–∏
    data = {}
    k = 0
    srcid = 3
    for z in headlist:
        bm = k
        head = z
        url = cfg.urls[head]['url']
        lId = db.find_doc('bookmarks', {'title': head}, False)['newid']

        # –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å —Å–∞–π—Ç–∞
        r = requests.get(url)
        soup = BeautifulSoup(r.content, 'html.parser')

        # –ø–æ–ª—É—á–∞–µ–º –∏–∑ –±–¥ –Ω–æ–º–µ—Ä –ø–æ—Å–ª–µ–¥–Ω–µ–π –Ω–æ–≤—Å—Ç–∏ –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω—É–º–µ—Ä–∞—Ü–∏–∏
        # try:
        #     lastitem = db.getsortitem('news', {'source': head}, [('_id', -1)])
        #     n = lastitem['N'] - 1
        #     rnd = lastitem['round'] + 1
        # except:
        #     n = 0
        #     rnd = 0

        # –ø–∞—Ä—Å–∏–º –Ω–æ–≤–æ—Å—Ç–∏
        content = soup.find('div', class_='l-row js-load-container')
        i = 0
        j = 0
        for item in content:  # –±–µ—Ä–µ–º –∫–∞–∂–¥—É—é 3—é(?) –∑–∞–ø–∏—Å—å
            if i % 2 != 0:
                if j % 2 == 0:
                    # –ø–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫—É
                    link = item.find('meta', {'itemprop': 'url'}).attrs['content']
                    code = link[-24:]  # –ø–æ–ª—É—á–∞–µ–º id

                    # –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å–≤–∏–µ–µ id –ø–æ—Å–ª–µ–¥–Ω–µ–π –Ω–æ–≤–æ—Å—Ç–∏ —Å –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–∞ (—á—Ç–æ–±—ã –Ω–µ –¥—É–±–ª–∏—Ä–æ–≤–∞–ª–∏—Å—å)
                    if lId != code:
                        title = item.find(
                            'meta', {'itemprop': 'name'}).attrs['content']  # –ø–æ–ª—É—á–∞–µ–º —Å–æ–¥–µ—Ä–¥–∞–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏
                        data[k] = {'srcid': srcid,
                                'source': head,
                                # 'round': rnd,
                                # 'N': n,
                                'id': code,
                                'text': title,
                                'link': link,
                                'date': datetime.now()
                                }  # –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –±–¥
                        # db.ins_doc('news', data, False)
                        # n -= 1
                        k += 1
                    else:
                        break  # –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ü–∏–∫–ª–∞ –µ—Å–ª–∏ —ç—Ç—É –Ω–æ–≤–æ—Å—Ç—å —É–∂–µ –ø–∞—Ä—Å–∏–ª–∏
                j += 1
            i += 1

        # –∑–∞–ø–∏—Å—ã–≤–∞–µ–º id –ø–æ—Å–ª–µ–¥–Ω–µ–π –Ω–æ–≤–æ—Å—Ç–∏ –≤ –±–¥
        if j > 0:
            try:
                # newid = db.getsortitem('news', {'source': head, 'round': rnd}, [('_id', 1)])[
                #     'id']  # –ø–æ–ª—É—á–∞–µ–º id –ø–æ—Å–ª–µ–¥–Ω–µ–π –Ω–æ–≤—Å—Ç–∏
                newid = data[bm]['id']
                doc = {'newid': newid, 'date': datetime.now()}
                db.upd_doc('bookmarks', {'title': head},
                        doc, False)  # –∑–∞–ø–∏—Å—ã–≤–∞–µ–º id –≤ –±–¥
            except:
                pass
        srcid += 1
        time.sleep(3)
    return data

async def msgrbcecnfin():
    # –ø–æ–ª—É—á–∞–µ–º –≤—Ä–µ–º—è –∏ –¥–∞—Ç—É
    tmpDate = await common.get_time()
    wd = tmpDate['msk_wd']
    date = tmpDate['msk_date_tod']

    # –æ–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è (–∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –∫–æ–Ω–µ—Ü)
    oldmsg = '<b>–≠–∫–æ–Ω–æ–º–∏–∫–∞ –∏ —Ñ–∏–Ω–∞–Ω—Å—ã:</b>\n\n'
    newmsg = ''
    endmsg = '\n–ò—Å—Ç–æ—á–Ω–∏–∫: rbc.ru' + \
        '\n\n#<b>—Ñ–∏–Ω–∞–Ω—Å—ã</b> #—ç–∫–æ–Ω–æ–º–∏–∫–∞ #rbc #—Ä–±–∫ #—Å–≤–æ–¥–∫–∞ #–Ω–æ–≤–æ—Å—Ç–∏' + cfg.bot_msg_tail
    lenmsg = 122  # –∫–æ–ª-–≤–æ —Å–∏–≤–æ–ª–æ–≤ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è

    # –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ data.json
    msgdata = {}
    # elems = []
    yy = await getrbcecnfin()
    head, olddata = yy[0], yy[1]
    if not len(olddata):
        return
    
    data = await common.sort_dict(olddata, 'key', '', True)
    # for i in headlist:
    #     elems.append({'source': i})

    # elems = {'$or': elems}
    # data = list(db.sort_doc('news', elems, [
    #             ('round', 1), ('N', 1)], True))
        
    # –∑–∞–ø–æ–ª–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–æ–≤–æ—Ç—è–º–∏ –∏–∑ –±–¥
    i = 0
    j = 4 # –Ω–∞—á–∏–Ω–∞–µ–º —Å—á–µ—Ç entities
    for item in data:
        msgitem = 'üìç' + '<b>' + \
            str(data[item]['text'])[:2].replace("<", "&lt;") + '</b>' + \
            str(data[item]['text'])[2:].replace("<", "&lt;") + \
            ' <a href="' + data[item]['link'] + '">—á–∏—Ç–∞—Ç—å</a>\n'
        newmsg = oldmsg + msgitem  # –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ—Å—Ç—å –∫ —É–∂–µ –∏–º–µ—é—â–µ–º—É—Å—è —Å–æ–æ–±—â–µ–Ω–∏—é
        # –∫–æ–ª-–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –±–µ–∑ —Å–∏–º–≤–æ–ª–æ–≤ —Ä–∞–∑–º–µ—Ç–∫–∏
        lenitem = len(str(data[item]['text'])) + 8
        lenmsg = lenmsg + lenitem
        if lenmsg >= cfg.tg_limits['msg_lim'] or j > cfg.tg_limits['entities']:  # –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ –ø—Ä–∏–≤—ã—à–∞–µ—Ç –ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ª–∏–º–∏—Ç —Ç–µ–ª–µ–≥—Ä–∞–º –∏–ª–∏ –∫–æ–ª-–≤–æ entities 100
            # –µ—Å–ª–∏ –ø—Ä–µ–≤—ã—à–∞–µ—Ç –∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Å–ª–æ–≤–∞—Ä—å –∏ –æ–±–Ω—É–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —Å—á–µ—Ç—á–∏–∫ —Å–∏–º–≤–æ–ª–æ–≤
            msgdata[i] = oldmsg
            oldmsg = msgitem
            lenmsg = lenitem
            i += 1
            j = 4 # —Å–±—Ä–∞—Å—ã–≤–∞–µ–º entities
        else:
            oldmsg = newmsg
            j += 2

    # –¥–æ–±–∞–≤–ª—è–µ–º –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é –∫–æ–Ω—Ü–æ–≤–∫—É –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ msgdata
    msg = oldmsg + endmsg
    msgdata[i] = msg

    # –æ—á–∏—â–∞–µ–º –±–¥
    # db.del_doc('news', elems, True)
    return msgdata


if __name__ == "__main__":
    test = msgrbcecnfin()
    print(test)
